"""add items_sold table

Revision ID: ef2ee4b741b4
Revises: b39e30a2cb13
Create Date: 2025-07-15 20:29:13.280471

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ef2ee4b741b4'
down_revision: Union[str, Sequence[str], None] = 'b39e30a2cb13'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items_inventory',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('item_quantity', sa.Integer(), nullable=False),
    sa.Column('item_price', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('daily_sales',
    sa.Column('sale_date', sa.Date(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('total_quantity_sold', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Integer(), nullable=False),
    sa.Column('item_inventory_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_inventory_id'], ['items_inventory.item_id'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('item_id'),
    sa.UniqueConstraint('item_inventory_id', 'sale_date', 'item_name', name='uix_item_daily')
    )
    op.create_table('items_sold',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('item_quantity', sa.Integer(), nullable=False),
    sa.Column('item_price', sa.Integer(), nullable=False),
    sa.Column('item_sold_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('item_inventory_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_inventory_id'], ['items_inventory.item_id'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('monthly_sales',
    sa.Column('sale_month', sa.Date(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('total_quantity_sold', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Integer(), nullable=False),
    sa.Column('item_inventory_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_inventory_id'], ['items_inventory.item_id'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('item_id'),
    sa.UniqueConstraint('item_inventory_id', 'sale_month', 'item_name', name='uix_item_month')
    )
    op.create_table('weekly_sales',
    sa.Column('week_start_date', sa.Date(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('total_quantity_sold', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Integer(), nullable=False),
    sa.Column('item_inventory_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_inventory_id'], ['items_inventory.item_id'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('item_id'),
    sa.UniqueConstraint('item_inventory_id', 'week_start_date', 'item_name', name='uix_item_week')
    )
    op.create_table('yearly_sales',
    sa.Column('sale_year', sa.Date(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(), nullable=False),
    sa.Column('total_quantity_sold', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Integer(), nullable=False),
    sa.Column('item_inventory_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_inventory_id'], ['items_inventory.item_id'], ondelete='NO ACTION'),
    sa.PrimaryKeyConstraint('item_id'),
    sa.UniqueConstraint('item_inventory_id', 'sale_year', 'item_name', name='uix_item_year')
    )
    op.drop_table('items_iventory')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items_iventory',
    sa.Column('item_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('item_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('item_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('item_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('item_id', name=op.f('items_iventory_pkey'))
    )
    op.drop_table('yearly_sales')
    op.drop_table('weekly_sales')
    op.drop_table('monthly_sales')
    op.drop_table('items_sold')
    op.drop_table('daily_sales')
    op.drop_table('items_inventory')
    # ### end Alembic commands ###
